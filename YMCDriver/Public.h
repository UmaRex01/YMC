#pragma once

#define YMC_DEVICE 0x8000

#define YMC_IOCTL_UNPROTECT_PROCESS CTL_CODE(YMC_DEVICE, 0x800, METHOD_NEITHER, FILE_ANY_ACCESS)
#define YMC_IOCTL_PROTECT_PROCESS CTL_CODE(YMC_DEVICE, 0x801, METHOD_NEITHER, FILE_ANY_ACCESS)
#define YMC_IOCTL_SET_PROCESS_PRIVS CTL_CODE(YMC_DEVICE, 0x802, METHOD_NEITHER, FILE_ANY_ACCESS)
#define YMC_IOCTL_GET_PROCESS_CALLBACKS CTL_CODE(YMC_DEVICE, 0x803, METHOD_NEITHER, FILE_ANY_ACCESS)
#define YMC_IOCTL_DEL_PROCESS_CALLBACKS CTL_CODE(YMC_DEVICE, 0x804, METHOD_NEITHER, FILE_ANY_ACCESS)
#define YMC_IOCTL_GET_THREAD_CALLBACKS CTL_CODE(YMC_DEVICE, 0x805, METHOD_NEITHER, FILE_ANY_ACCESS)
#define YMC_IOCTL_DEL_THREAD_CALLBACKS CTL_CODE(YMC_DEVICE, 0x806, METHOD_NEITHER, FILE_ANY_ACCESS)
#define YMC_IOCTL_GET_IMAGE_CALLBACKS CTL_CODE(YMC_DEVICE, 0x807, METHOD_NEITHER, FILE_ANY_ACCESS)
#define YMC_IOCTL_DEL_IMAGE_CALLBACKS CTL_CODE(YMC_DEVICE, 0x808, METHOD_NEITHER, FILE_ANY_ACCESS)

#ifndef SE_MAX_WELL_KNOWN_PRIVILEGE
#define SE_MAX_WELL_KNOWN_PRIVILEGE 36
#endif

#ifndef SE_MIN_WELL_KNOWN_PRIVILEGE
#define SE_MIN_WELL_KNOWN_PRIVILEGE 2
#endif

// the system can register up to 64 process-creation callback routines.
// https://learn.microsoft.com/en-us/windows-hardware/drivers/ddi/ntddk/nf-ntddk-pssetcreateprocessnotifyroutine#remarks
#define MAX_CALLBACKS 64
/*

*/
typedef struct _YMCREQ_PROTECT_PROCESS {
	int TargetProcessId;
	UCHAR Type;
	UCHAR Audit;
	UCHAR Signer;
} YMCREQ_PROTECT_PROCESS, * PYMCREQ_PROTECT_PROCESS;

/*

*/
typedef struct _YMCREQ_PROCESS_PRIVS {
	int TargetProcessId;
	ULONG64 NewPrivileges[SE_MAX_WELL_KNOWN_PRIVILEGE - SE_MIN_WELL_KNOWN_PRIVILEGE];
} YMCREQ_PROCESS_PRIVS, * PYMCREQ_PROCESS_PRIVS;

/*

*/
typedef struct _YMCREQ_CALLBACKS {
	int TargetCallbackId;
} YMCREQ_CALLBACKS, * PYMCREQ_CALLBACKS;

/*

*/
typedef struct _YMCRES_CALLBACKS {
	ULONG64 Address;
	CHAR Module[256];
} YMCRES_CALLBACKS, * PYMCRES_CALLBACKS;